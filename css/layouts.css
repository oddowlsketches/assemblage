/* Layout Styles for Oracle Stack */

/* Main container styles */
#imageContainer {
    width: 100vw;
    height: calc(100vh - 200px);
    overflow: hidden;
    position: relative;
    left: 50%;
    right: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: inherit;
    transition: background-color 0.3s ease;
}

/* Background Color Classes */
.bg-technical { background-color: var(--color-technical) !important; }
.bg-botanical { background-color: var(--color-botanical) !important; }
.bg-architectural { background-color: var(--color-architectural) !important; }
.bg-scientific { background-color: var(--color-scientific) !important; }
.bg-geometric { background-color: var(--color-geometric) !important; }
.bg-abstract { background-color: var(--color-abstract) !important; }
.bg-mystery { background-color: var(--color-mystery) !important; }
.bg-transformation { background-color: var(--color-transformation) !important; }
.bg-wisdom { background-color: var(--color-wisdom) !important; }
.bg-black-and-white { background-color: var(--color-reflection) !important; }
.bg-color { background-color: var(--color-insight) !important; }
.bg-minimal { background-color: var(--color-clarity) !important; }
.bg-complex { background-color: var(--color-transformation) !important; }
.bg-symmetrical { background-color: var(--color-wisdom) !important; }
.bg-asymmetrical { background-color: var(--color-reflection) !important; }
.bg-organic { background-color: var(--color-insight) !important; }
.bg-structured { background-color: var(--color-clarity) !important; }
.bg-natural { background-color: var(--color-transformation) !important; }
.bg-urban { background-color: var(--color-wisdom) !important; }
.bg-industrial { background-color: var(--color-reflection) !important; }

/* Common settings for all images */
.image-card {
    position: relative;
    background-color: transparent;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
}

.image-card img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    mix-blend-mode: multiply !important;
}

/* Stack Layout */
.layout-stack {
    position: relative;
    height: 100%;
    margin: 0 auto;
    max-width: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    background: transparent;
}

.layout-stack .image-card {
    position: absolute;
    width: 350px;
    height: 450px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.5s ease;
    opacity: 0.8;
    background: transparent;
}

.layout-stack .image-card:nth-child(1) {
    transform: translate(-50%, -50%) rotate(-5deg);
    z-index: 3;
    opacity: 1;
}

.layout-stack .image-card:nth-child(2) {
    transform: translate(-53%, -48%) rotate(3deg);
    z-index: 2;
    opacity: 0.9;
}

.layout-stack .image-card:nth-child(3) {
    transform: translate(-47%, -52%) rotate(-2deg);
    z-index: 1;
    opacity: 0.8;
}

.layout-stack .image-card:nth-child(4) {
    transform: translate(-45%, -49%) rotate(4deg);
    z-index: 0;
    opacity: 0.7;
}

.layout-stack .image-card:nth-child(5) {
    transform: translate(-55%, -51%) rotate(-3deg);
    z-index: 0;
    opacity: 0.6;
}

.layout-stack .image-card img {
    filter: brightness(0.8) contrast(1.2) invert(0.1);
}

/* Grid Layout */
.layout-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    margin: 0 auto;
}

.layout-grid .image-card {
    height: 300px;
}

/* Row Layout */
.layout-row {
    display: flex;
    width: 100%;
    height: 100%;
    overflow: hidden;
    padding: 0;
    margin: 0;
    gap: 0;
}

.layout-row .image-card {
    flex: 1;
    min-width: 0;
    height: 100%;
    margin: 0;
    padding: 0;
    position: relative;
    overflow: hidden;
    background-color: transparent;
}

.layout-row .image-card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    mix-blend-mode: multiply;
    background-color: transparent;
}

/* Animation for fortune reveal */
@keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

.fade-in {
    animation: fadeIn 1.5s forwards;
}

/* Animation for shuffling cards */
@keyframes shuffle {
    0% {
        transform: translateX(0) rotate(0);
        opacity: 1;
    }
    50% {
        transform: translateX(100px) rotate(5deg);
        opacity: 0.5;
    }
    100% {
        transform: translateX(0) rotate(0);
        opacity: 1;
    }
}

.image-card.shuffling {
    animation: shuffle 0.7s ease-in-out;
}

/* Pattern Layout */
.layout-pattern {
    position: relative;
    width: 100%;
    height: 100%;
    display: grid;
    gap: 0;
    padding: 0;
    perspective: 1000px;
    overflow: hidden;
    background: transparent;
    margin: 0;
    border-radius: 0;
    place-items: center;
}

.layout-pattern .image-card {
    position: relative;
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
    width: 100%;
    height: 100%;
    overflow: hidden;
    aspect-ratio: 1;
    border-radius: 0;
    background: transparent;
    box-shadow: none;
}

.layout-pattern .image-card:hover {
    transform: translateZ(20px) rotate(5deg);
    z-index: 1;
}

.layout-pattern .image-card img {
    filter: brightness(0.8) contrast(1.2) invert(0.1);
}

/* Pattern-specific styles */
.layout-pattern[data-arrangement="warhol"],
.layout-pattern[data-arrangement="mosaic"],
.layout-pattern[data-arrangement="grid"],
.layout-pattern[data-arrangement="random"] {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    grid-auto-rows: minmax(150px, 1fr);
    gap: 0;
    background: transparent;
    place-items: center;
}

/* Layout Controls */
.layout-controls {
    display: flex;
    gap: 1rem;
    margin-bottom: 1rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 0;
    z-index: 1000;
    position: relative;
    backdrop-filter: blur(10px);
    width: 100%;
}

.layout-controls label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-color);
}

.layout-controls input[type="range"] {
    width: 150px;
}

/* Ensure container doesn't add padding */
.container {
    padding: 0;
    margin: 0;
    max-width: none;
}

/* Adjust header to overlay on top of images */
header {
    position: relative;
    z-index: 1;
    background-color: inherit;
    padding: 20px;
}

/* Adjust controls to overlay on top of images */
.controls {
    position: relative;
    z-index: 1;
    background-color: inherit;
}

/* Ensure footer overlays on top of images */
footer {
    position: relative;
    z-index: 1;
    background-color: inherit;
}
