@tailwind base;
@tailwind components;
@tailwind utilities;

/* Color System Variables */
:root {
  /* Base Colors */
  --color-background: #ffffff;
  --color-text: #333333;
  --color-accent: #666666;
  
  /* Mood Colors */
  --color-mystery: #2c1b47;
  --color-transformation: #4a3b6c;
  --color-wisdom: #6b5b8c;
  --color-reflection: #8c7bac;
  --color-insight: #ad9ecc;
  --color-clarity: #cec1ec;
  
  /* Tag-based Colors */
  --color-technical: #2c3e50;
  --color-botanical: #2ecc71;
  --color-architectural: #34495e;
  --color-scientific: #3498db;
  
  /* Dynamic UI Colors */
  --background-color: #f5f5f5;
  --text-color: #333;
  --button-border-color: #333;
  --button-hover-bg: #333;
  --transition-speed: 0.3s;
}

/* CSS Reset and Variables */
:root {
  --background-color: #f5f5f5;
  --text-color: #333;
  --transition-speed: 0.3s;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  background-color: var(--background-color);
  transition: background-color var(--transition-speed) ease;
}

/* Canvas Container */
.canvas-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  background-color: var(--background-color);
  transition: background-color var(--transition-speed) ease;
}

/* Added style for the ID used in App.jsx */
#canvas-container {
  flex: 1; /* Allow it to grow and shrink in the flex column of #wrapper */
  display: flex; /* To properly contain the absolutely positioned canvas or a canvas with width/height 100% */
  position: relative; /* Establishes a positioning context */
  overflow: hidden; /* In case canvas tries to be too big, though CollageService resizes it */
  pointer-events: none; /* Don't block clicks on floating elements */
}

canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
  pointer-events: auto; /* Canvas itself should receive clicks */
}

/* Fix for dev harness: prevent grid canvases from being stretched or absolutely positioned */
.dev-harness-grid canvas {
  position: static !important;
  width: 120px !important;
  height: 120px !important;
  object-fit: initial !important;
}

/* Header */
header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  padding: 1.5rem;
  z-index: 10;
  background: var(--background-color);
  backdrop-filter: none;
}

.header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.header-text {
  flex: 1;
}

.header-text h1 {
  font-family: 'Playfair Display', serif;
  font-style: italic;
  font-size: 2.5rem;
  color: var(--text-color);
  margin: 0;
  line-height: 1;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.header-text .tagline {
  font-family: 'Space Mono', monospace;
  font-size: 1rem;
  margin: 0.5rem 0;
  color: var(--text-color);
}

/* Buttons */
.header-controls {
  display: flex;
  align-items: center;
  gap: 10px;
}

.header-controls button {
  background: white;
  color: #333;
  border: 1px solid var(--button-border-color);
  color: var(--text-color);
  padding: 0.5rem 1rem;
  cursor: pointer;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  transition: all var(--transition-speed) ease;
  height: 40px;
  box-sizing: border-box;
}

.header-controls button:hover:not(.settings-btn):not(.user-btn) {
  background-color: var(--button-hover-bg);
  color: white;
}

.header-controls button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Loading indicator */
.loading {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-family: 'Space Mono', monospace;
  color: var(--text-color);
  font-size: 1.2rem;
  z-index: 20;
}

/* Responsive styles */
@media (max-width: 768px) {
  body {
    padding-top: 0; /* Remove any top padding since header is floating */
  }
  
  #canvas-container {
    height: 100vh; /* Full viewport height */
    margin-top: 0; /* No margin needed since header floats */
  }
  
  header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding: 15px;
    background: transparent;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    background-color: rgba(255, 255, 255, 0.1);
    z-index: 50;
  }

  .header-text {
    flex: 1;
  }

  .header-text h1 {
    font-size: 24px;
    margin: 0;
  }

  .header-text .tagline {
    display: none;
  }

  .header-controls {
    display: flex;
    align-items: center;
    position: static;
    width: auto;
  }

  .action-buttons {
    display: none; /* Hide desktop action buttons on mobile */
  }

  button {
    padding: 6px 12px;
    font-size: 12px;
  }
}

@media (max-width: 480px) {
  .tagline {
    font-size: 12px;
  }

  h1 {
    font-size: 24px;
  }
}

/* Footer */
footer {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 0.5rem;
  text-align: center;
  z-index: 10;
  background: var(--background-color);
  backdrop-filter: none;
}

.copyright {
  font-family: 'Space Mono', monospace;
  font-size: 0.7rem;
  color: rgba(255, 255, 255, 0.6);
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  margin: 0;
}

/* Effect buttons */
.effect-buttons {
  display: flex;
  gap: 0.5rem;
}

.effect-button {
  background: white;
  color: var(--text-color);
  border: 1px solid var(--text-color);
  padding: 0.5rem 1rem;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.3s ease;
}

.effect-button:hover {
  background: var(--text-color);
  color: white;
}

.effect-button.active {
  background: var(--color-transformation);
  color: white;
  border-color: var(--color-transformation);
}

/* Action buttons */
.action-buttons {
  display: flex;
  gap: 10px;
  align-items: center;
}

/* Primary action buttons (New and Save) */
#generateButton,
#saveButton {
  background: var(--text-color);
  border: 1px solid var(--text-color);
  color: white;
  padding: 0.5rem 1rem;
  cursor: pointer;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  transition: all var(--transition-speed) ease;
  height: 40px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

#generateButton:hover,
#saveButton:hover {
  background: var(--background-color);
  border-color: var(--text-color);
  color: var(--text-color);
}

/* Save button specific styling */
#saveButton {
  padding: 0.5rem;
  min-width: 40px;
}

#saveButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* Save feedback styling */
.save-feedback {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  white-space: nowrap;
  text-shadow: 0 0 4px rgba(0, 0, 0, 0.8), 0 0 8px rgba(0, 0, 0, 0.4);
  font-weight: 500;
}

.gallery-link {
  background: none;
  border: none;
  text-decoration: underline;
  cursor: pointer;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  padding: 0;
  margin-left: 0.25rem;
  text-shadow: 0 0 4px rgba(0, 0, 0, 0.8), 0 0 8px rgba(0, 0, 0, 0.4);
  font-weight: 500;
}

.gallery-link:hover {
  opacity: 0.8;
  background: none;
}

/* Save spinner */
.save-spinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.mobile-spinner {
  width: 20px;
  height: 20px;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Save overlay */
.save-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2000;
  backdrop-filter: blur(2px);
}

.save-overlay-content {
  background: white;
  padding: 2rem;
  border-radius: 8px;
  text-align: center;
  max-width: 300px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  border: 1px solid #333;
}

.save-overlay-content p {
  margin: 1rem 0;
  font-family: 'Space Mono', monospace;
  font-size: 1.1rem;
  color: #333;
}

.save-spinner-large {
  width: 48px;
  height: 48px;
  border: 3px solid rgba(0, 0, 0, 0.1);
  border-top: 3px solid #333;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 0 auto;
}

.save-success-icon,
.save-error-icon {
  font-size: 48px;
  line-height: 1;
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
}

.save-success-icon {
  color: #333;
}

.save-error-icon {
  color: #e74c3c;
}

.save-overlay-button {
  background: #333;
  color: white;
  border: 1px solid #333;
  padding: 0.75rem 1.5rem;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  cursor: pointer;
  border-radius: 4px;
  margin: 0.5rem;
  transition: all 0.2s ease;
}

.save-overlay-button:hover {
  background: white;
  color: #333;
}

.save-overlay-dismiss {
  background: transparent;
  color: #333;
  border: 1px solid #333;
  opacity: 0.7;
  padding: 0.5rem 1rem;
  font-family: 'Space Mono', monospace;
  font-size: 0.85rem;
  cursor: pointer;
  border-radius: 4px;
  margin: 0.5rem;
  transition: all 0.2s ease;
}

.save-overlay-dismiss:hover {
  opacity: 1;
  background: white;
}

/* Collection selector */
.collection-selector {
  background: white;
  border: 1px solid var(--button-border-color);
  color: var(--text-color);
  padding: 0.5rem 1rem;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all var(--transition-speed) ease;
  min-width: 120px;
}

.collection-selector:hover {
  background-color: var(--button-hover-bg);
  color: white;
}

.collection-selector:focus {
  outline: none;
  background-color: var(--button-hover-bg);
  color: white;
}

/* Legacy App Styles */
body {
  margin: 0;
  padding: 0;
  font-family: 'Helvetica Neue', Arial, sans-serif;
  background-color: var(--background-color);
  color: #333;
  transition: background-color var(--transition-speed) ease;
}

#wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem;
  background: transparent;
  backdrop-filter: none;
  z-index: 10;
}

header h1 {
  margin: 0;
  font-size: 2rem;
  font-weight: 700;
}

header h2 {
  margin: 0.5rem 0 0;
  font-size: 1rem;
  font-weight: 400;
  color: #666;
}

.controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.effect-buttons, .action-buttons {
  display: flex;
  gap: 0.5rem;
}

button {
  padding: 8px 16px;
  border: 1px solid currentColor;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-size: 14px;
  min-width: 60px;
}

button:hover {
  background-color: #e0e0e0;
}

button.active {
  background-color: #4a3b6c;
  color: white;
  border-color: #4a3b6c;
}

canvas {
  flex: 1;
  display: block;
  background-color: #fff;
}

footer {
  padding: 1rem 2rem;
  background: transparent;
  backdrop-filter: none;
  text-align: center;
  font-size: 0.8rem;
  color: #666;
  box-shadow: none;
}

.effect-controls {
  display: flex;
  gap: 1rem;
  margin-top: 1rem;
}

.effect-controls select {
  padding: 0.5rem;
  border: 1px solid var(--button-border-color, #666);
  border-radius: 4px;
  background: transparent;
  color: var(--text-color, #333);
  font-family: inherit;
  cursor: pointer;
}

.effect-controls select:hover {
  background: rgba(255, 255, 255, 0.1);
}

.effect-controls select:focus {
  outline: none;
  border-color: var(--text-color, #333);
}

.prompt-input-container {
  margin-bottom: 10px;
  width: 100%;
}

#prompt-input {
  width: 100%;
  padding: 8px 12px;
  border: 1px solid var(--button-border-color);
  border-radius: 4px;
  font-size: 14px;
  background-color: rgba(255, 255, 255, 0.8);
  color: var(--text-color);
  transition: all var(--transition-speed) ease;
}

#prompt-input:focus {
  outline: none;
  border-color: var(--color-architectural);
  box-shadow: 0 0 0 2px rgba(52, 73, 94, 0.2);
}

#prompt-input::placeholder {
  color: #999;
}

/* Preview container override to avoid legacy fixed positioning */
.preview-container {
  position: relative !important;
  width: 100%;
  height: 100%;
}

.preview-container canvas {
  position: static !important;
}

/* Desktop/Mobile visibility classes */
.desktop-only {
  display: flex !important;
}

.mobile-only {
  display: none !important;
}

@media (max-width: 768px) {
  .desktop-only {
    display: none !important;
  }
  
  .mobile-only {
    display: flex !important;
  }
}

/* Dropdown Components */
.settings-dropdown,
.user-menu {
  position: relative;
  display: inline-block;
}

.settings-btn,
.user-btn {
  background: white !important;
  border: 1px solid #333 !important;
  color: #333 !important;
  padding: 0.5rem;
  cursor: pointer;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  height: 40px;
  min-width: 40px;
  box-sizing: border-box;
}

.settings-btn:hover,
.user-btn:hover {
  background-color: #f5f5f5 !important;
  color: #333 !important;
  border-color: #333 !important;
}

.user-email {
  font-size: 0.8rem;
  max-width: 150px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.dropdown-content,
.user-dropdown {
  display: none;
  position: absolute;
  right: 0;
  top: 100%;
  background: white !important;
  border: 1px solid var(--button-border-color);
  border-radius: 4px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 100;
  min-width: 160px;
  max-width: 250px;
  overflow: hidden;
}

.dropdown-content.show,
.user-dropdown.show {
  display: block;
}

.dropdown-label {
  padding: 0.5rem 1rem;
  font-size: 0.75rem;
  font-weight: bold;
  color: #666 !important;
  border-bottom: 1px solid #eee;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  background: #f9f9f9 !important;
  font-family: 'Space Mono', monospace;
}

.dropdown-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 0.75rem 1rem;
  border: none !important;
  background: white !important;
  color: var(--text-color) !important;
  cursor: pointer;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  text-align: left;
  transition: background-color var(--transition-speed) ease;
  outline: none !important;
  box-shadow: none !important;
}

.dropdown-item:focus,
.dropdown-item:active,
.dropdown-item:focus-visible {
  outline: none !important;
  box-shadow: none !important;
  border: none !important;
}

.dropdown-item:hover {
  background-color: #f5f5f5 !important;
}

.dropdown-item.selected {
  background-color: #f0f8ff;
  color: var(--color-transformation);
}

.dropdown-item.selected:hover {
  background-color: #f5f5f5;
  color: var(--color-transformation);
}

/* User email header in dropdown */
.user-email-header {
  padding: 0.5rem 1rem;
  font-size: 0.75rem;
  color: var(--color-accent);
  border-bottom: 1px solid #eee;
  background: #f9f9f9;
  font-weight: 500;
}

/* Auth helper text for signed out users */
.auth-section {
  display: flex;
  align-items: center;
}

.auth-helper-text {
  font-family: 'Space Mono', monospace;
  font-size: 0.8rem;
  color: var(--color-accent);
  font-style: italic;
}

.checkmark {
  font-weight: bold;
  margin-left: 0.5rem;
}

/* Close dropdowns when clicking outside */
.settings-dropdown:not(:focus-within) .dropdown-content,
.user-menu:not(:focus-within) .user-dropdown {
  display: none;
}

/* Mobile responsive adjustments */
@media (max-width: 640px) {
  /* Header - single row layout on mobile */
  header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem;
    background: transparent;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    background-color: rgba(255, 255, 255, 0.1);
    z-index: 100;
  }
  
  .header-text {
    flex: 0 0 auto;
  }
  
  .header-text h1 {
    font-size: 1.5rem;
  }
  
  .header-controls {
    position: static;
    width: auto;
  }
  
  .mobile-menu-btn {
    position: static;
    margin-left: auto;
  }
  
  /* Canvas should start from the top edge */
  #canvas-container {
    padding-top: 0;
    margin-top: 0;
    height: 100vh;
  }
  
  /* Touch targets minimum 44px */
  button {
    min-height: 44px;
    padding: 0.75rem;
  }
  
  /* Modals full screen */
  .upload-modal-content,
  .modal-content {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    width: 100% !important;
    height: 100% !important;
    max-width: none !important;
    max-height: none !important;
    transform: none !important;
    border-radius: 0 !important;
  }
  
  /* Gallery grids */
  .gallery-grid {
    grid-template-columns: repeat(2, 1fr) !important;
  }
  
  .file-grid {
    grid-template-columns: repeat(3, 1fr) !important;
  }
  
  /* Collection cards */
  .collection-card .gallery-thumbnail {
    min-height: 120px;
  }
  
  /* Hide tooltips on mobile */
  .tooltip,
  [title] {
    pointer-events: none;
  }
}

@media (max-width: 480px) {
  /* Even smaller screens */
  .gallery-grid {
    grid-template-columns: 1fr !important;
  }
  
  .file-grid {
    grid-template-columns: repeat(2, 1fr) !important;
  }
}

/* Ensure ScrollRestoration works */
body {
  scroll-behavior: auto;
}

/* Mobile responsive adjustments - updated section */
@media (max-width: 768px) {
  .header-controls {
    position: relative;
  }
  
  /* Keep only the mobile menu button visible on mobile */
  .header-controls > .action-buttons,
  .header-controls > .settings-dropdown,
  .header-controls > .user-menu {
    display: none !important;
  }
  
  /* Ensure mobile menu button is visible */
  .header-controls > .mobile-menu-btn {
    display: flex !important;
  }
  
  /* Show mobile floating buttons only on mobile */
  .mobile-actions {
    display: flex !important;
  }
}

/* Mobile floating buttons - hidden by default */
.mobile-actions {
  position: fixed;
  bottom: 20px;
  right: 20px;
  display: none;
  flex-direction: column;
  gap: 12px;
  z-index: 300;
  pointer-events: auto;
}

.mobile-actions button {
  width: 56px;
  height: 56px;
  border-radius: 50%;
  background: white;
  border: 1px solid var(--button-border-color);
  color: var(--text-color);
  cursor: pointer;
  font-family: 'Space Mono', monospace;
  font-size: 12px;
  font-weight: 500;
  transition: all var(--transition-speed) ease;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  pointer-events: auto;
}

.mobile-actions button:hover {
  background-color: var(--background-color);
  color: var(--text-color);
  border-color: var(--text-color);
  transform: scale(1.05);
}

.mobile-actions button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

/* Mobile menu button */
.mobile-menu-btn {
  display: none;
  background: none !important;
  border: none !important;
  cursor: pointer;
  padding: 0.5rem;
  margin-left: 0.5rem;
  color: var(--text-color);
}

@media (max-width: 768px) {
  .mobile-menu-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    background: none !important;
    border: none !important;
    box-shadow: none !important;
    color: var(--text-color);
    padding: 0.25rem;
    margin: 0;
  }
}

/* Mobile menu overlay */
.mobile-menu-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 200;
  display: none;
}

.mobile-menu-overlay.show {
  display: block;
}

/* Mobile menu panel */
.mobile-menu-panel {
  position: fixed;
  top: 0;
  right: -300px;
  width: 280px;
  height: 100vh;
  background: white;
  z-index: 201;
  transition: right 0.3s ease;
  padding: 0;
  box-shadow: -4px 0 12px rgba(0, 0, 0, 0.15);
}

.mobile-menu-panel.show {
  right: 0;
}

/* Mobile menu close button */
.mobile-menu-close {
  position: absolute;
  top: 15px;
  right: 15px;
  width: 32px;
  height: 32px;
  border: none;
  background: transparent;
  color: var(--text-color);
  cursor: pointer;
  font-size: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background-color var(--transition-speed) ease;
}

.mobile-menu-close:hover {
  background-color: #f5f5f5;
}

.mobile-menu-section {
  padding: 1rem;
  border-bottom: 1px solid #eee;
}

.mobile-menu-section:first-child {
  margin-top: 60px;
}

.mobile-menu-section:last-child {
  border-bottom: none;
}

.mobile-menu-label {
  font-size: 0.75rem;
  font-weight: bold;
  color: #666;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 0.5rem;
}

.mobile-menu-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 0.75rem 0;
  border: none;
  background: transparent;
  color: #333;
  cursor: pointer;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  text-align: left;
  outline: none;
}

.mobile-menu-item:hover {
  color: #000;
}

.mobile-menu-item.selected {
  color: #000;
  font-weight: 500;
}

/* Mobile collection selector */
.mobile-collection-selector {
  margin: 0.75rem 0;
}

.mobile-collection-dropdown {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid #333;
  background: white;
  color: #333;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.mobile-collection-dropdown:hover {
  border-color: #000;
}

.mobile-collection-dropdown:focus {
  outline: none;
  border-color: #000;
  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.2);
}

/* Sign in button */
.sign-in-btn {
  background: white !important;
  border: 1px solid #333 !important;
  color: #333 !important;
  padding: 0.5rem 1rem;
  cursor: pointer;
  font-family: 'Space Mono', monospace;
  font-size: 0.9rem;
  transition: all 0.3s ease;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.sign-in-btn:hover {
  background: #f5f5f5 !important;
  color: #333 !important;
  border-color: #333 !important;
}

/* Toast animation */
@keyframes slideDown {
  from {
    transform: translateX(-50%) translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(-50%) translateY(0);
    opacity: 1;
  }
}