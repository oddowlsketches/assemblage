-- Enable pgvector extension for embeddings
CREATE EXTENSION IF NOT EXISTS vector;

-- Add retry count to images table
ALTER TABLE public.images ADD COLUMN IF NOT EXISTS retry_count INT DEFAULT 0;

-- Add provider field to images table
ALTER TABLE public.images ADD COLUMN IF NOT EXISTS provider TEXT DEFAULT 'upload' CHECK (provider IN ('upload', 'dropbox'));

-- Add embedding field to images table
ALTER TABLE public.images ADD COLUMN IF NOT EXISTS embedding vector(1536);

-- Create retry queue table
CREATE TABLE IF NOT EXISTS public.images_retry_queue (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  image_id TEXT NOT NULL REFERENCES public.images(id) ON DELETE CASCADE,
  scheduled_at TIMESTAMPTZ NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Create index for retry queue processing
CREATE INDEX IF NOT EXISTS idx_retry_queue_scheduled ON public.images_retry_queue (scheduled_at);

-- Create embedding usage log table
CREATE TABLE IF NOT EXISTS public.embedding_usage_log (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  tokens_in INT NOT NULL,
  cost_usd NUMERIC(10, 6) NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Create index for usage tracking
CREATE INDEX IF NOT EXISTS idx_usage_log_user_created ON public.embedding_usage_log (user_id, created_at);

-- Add RLS policies
ALTER TABLE public.images_retry_queue ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.embedding_usage_log ENABLE ROW LEVEL SECURITY;

-- Service role can manage retry queue
CREATE POLICY "Service role can manage retry queue" ON public.images_retry_queue
  FOR ALL TO service_role
  USING (true)
  WITH CHECK (true);

-- Service role can insert usage logs
CREATE POLICY "Service role can insert usage logs" ON public.embedding_usage_log
  FOR INSERT TO service_role
  WITH CHECK (true);

-- Users can view their own usage logs
CREATE POLICY "Users can view own usage logs" ON public.embedding_usage_log
  FOR SELECT TO authenticated
  USING (auth.uid() = user_id);
